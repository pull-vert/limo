plugins {
    id 'org.javamodularity.moduleplugin' apply false
}

subprojects {
    apply plugin: 'java'
//    apply plugin: 'jacoco'
    apply plugin: 'org.javamodularity.moduleplugin'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.slf4j:slf4j-api:$slf4j_version"
        implementation "org.jetbrains:annotations:$jetbrains_annotations_version"


        // import BOM
        testImplementation platform("org.junit:junit-bom:$junit_bom_version")

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation "org.assertj:assertj-core:$assertj_version"
        testImplementation "org.slf4j:slf4j-simple:$slf4j_version"

        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        // Force Gradle to load the JUnit Platform Launcher from the module-path
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    configurations.all {
        exclude module: 'checker-framework'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'passed', 'failed', 'skipped'
            showStandardStreams = true
        }
    }

//    jacoco {
//        toolVersion = "0.8.5"
//    }
//
//    tasks.withType(Test) {
//        jacoco.includeNoLocationClasses = true
//        jacoco.excludes = ['jdk.internal.*']
//    }
//
//    jacocoTestReport {
//        dependsOn(test)
//
//        reports {
//            html.enabled = true
//            xml.enabled = true
//        }
//    }
}

// Workaround for https://github.com/researchgate/gradle-release/issues/144
task build {
    dependsOn subprojects.findResults { it.tasks.findByName('build') }
}

// execute ./gradlew wrapper then remove .gradle directory when version change
wrapper {
    gradleVersion = '6.3'
    distributionType = Wrapper.DistributionType.ALL
}
